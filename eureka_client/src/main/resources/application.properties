server.port=9010
eureka.client.service-url.defaultZone=http://localhost:9000/eureka/
spring.application.name=eureka-client
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
#eureka.client.healthcheck.enabled=true
eureka.client.registryFetchIntervalSeconds=5

# ps:超时时间只需要关注ribbon和hystrix,不需要关注fegin,因为打开feign.hystrix.enabled=true后,hystrix会将feign包裹起来
# ribbon
ribbon.eureka.enabled=false
#eureka-server.ribbon.listOfServers=localhost:9020  -- 自定义服务列表
#ServerListRefreshInterval=3  -- 拉取eureka服务信息间隔时间
#eureka-server.ribbon.NFLoadBalancerRuleClassName=com.example.eureka_client.config.ribbon.MyRule    -- 自定义路由
#ribbon.eager-load.enabled=true -- 饥饿加载
#ribbon.eager-load.clients=eureka-server    -- 饥饿加载指定服务
ribbon.ReadTimeout=1000
ribbon.ConnectTimeout=1000
#ribbon.MaxAutoRetries=1    # --重试次数
#ribbon.MaxAutoRetriesNextServer=1  # -- 切换实例的重试次数
#ribbon.OkToRetryOnAllOperations=false  # -- 是否对所有请求都重试,默认为只对GET请求进行重试

# hystrix
# --全局超时时间,也可以指定服务(替换其中的default)
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=500
# --线程隔离方式(信号量\线程池)
execution.isolation.strategy=SEMAPHORE
# --监控stream
management.endpoints.web.exposure.include=hystrix.stream

# fegin
feign.hystrix.enabled=true
feign.httpclient.enabled=true
feign.httpclient.max-connections=500
feign.httpclient.max-connections-per-route=100